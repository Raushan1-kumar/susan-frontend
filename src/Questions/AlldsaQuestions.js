const problems = [
  {
    id: 1,
    title: "Two Sum",
    difficulty: "Easy",
    topics: ["Array", "HashMap"],
    company: "Google",
  },
  {
    id: 2,
    title: "Add Two Numbers",
    difficulty: "Medium",
    topics: ["Linked List"],
    company: "Microsoft",
  },
  {
    id: 3,
    title: "Longest Substring Without Repeating Characters",
    difficulty: "Medium",
    topics: ["Sliding Window"],
    company: "Amazon",
  },
  {
    id: 4,
    title: "Median of Two Sorted Arrays",
    difficulty: "Hard",
    topics: ["Binary Search"],
    company: "Facebook",
  },
  {
    id: 5,
    title: "Container With Most Water",
    difficulty: "Medium",
    topics: ["Two Pointers"],
    company: "Adobe",
  },
  {
    id: 6,
    title: "Valid Parentheses",
    difficulty: "Easy",
    topics: ["Stack"],
    company: "Google",
  },
  {
    id: 7,
    title: "Search in Rotated Sorted Array",
    difficulty: "Medium",
    topics: ["Binary Search"],
    company: "Amazon",
  },
  {
    id: 8,
    title: "Merge Intervals",
    difficulty: "Medium",
    topics: ["Sorting"],
    company: "Microsoft",
  },
  {
    id: 9,
    title: "Find Minimum in Rotated Sorted Array",
    difficulty: "Medium",
    topics: ["Binary Search"],
    company: "Facebook",
  },
  {
    id: 10,
    title: "Largest Rectangle in Histogram",
    difficulty: "Hard",
    topics: ["Stack"],
    company: "Google",
  },
  {
    id: 11,
    title: "Trapping Rain Water",
    difficulty: "Hard",
    topics: ["Two Pointers"],
    company: "Netflix",
  },
  {
    id: 12,
    title: "Reverse Linked List",
    difficulty: "Easy",
    topics: ["Linked List"],
    company: "Apple",
  },
  {
    id: 13,
    title: "Climbing Stairs",
    difficulty: "Easy",
    topics: ["Dynamic Programming"],
    company: "Microsoft",
  },
  {
    id: 14,
    title: "Combination Sum",
    difficulty: "Medium",
    topics: ["Backtracking"],
    company: "Google",
  },
  {
    id: 15,
    title: "Word Search",
    difficulty: "Medium",
    topics: ["Backtracking"],
    company: "Amazon",
  },
  {
    id: 16,
    title: "Graph Valid Tree",
    difficulty: "Medium",
    topics: ["Graph", "Union Find"],
    company: "Facebook",
  },
  {
    id: 17,
    title: "Number of Islands",
    difficulty: "Medium",
    topics: ["Graph", "DFS"],
    company: "Adobe",
  },
  {
    id: 18,
    title: "Course Schedule",
    difficulty: "Medium",
    topics: ["Graph", "Topological Sort"],
    company: "Google",
  },
  {
    id: 19,
    title: "Merge Two Sorted Lists",
    difficulty: "Easy",
    topics: ["Linked List"],
    company: "Amazon",
  },
  {
    id: 20,
    title: "Implement Trie (Prefix Tree)",
    difficulty: "Medium",
    topics: ["Trie"],
    company: "Microsoft",
  },
  {
    id: 21,
    title: "Word Ladder",
    difficulty: "Hard",
    topics: ["Graph", "BFS"],
    company: "Facebook",
  },
  {
    id: 22,
    title: "LRU Cache",
    difficulty: "Hard",
    topics: ["Design", "Linked HashMap"],
    company: "Google",
  },
  {
    id: 23,
    title: "Decode Ways",
    difficulty: "Medium",
    topics: ["Dynamic Programming"],
    company: "Netflix",
  },
  {
    id: 24,
    title: "Longest Increasing Subsequence",
    difficulty: "Medium",
    topics: ["Dynamic Programming"],
    company: "Apple",
  },
  {
    id: 25,
    title: "Coin Change",
    difficulty: "Medium",
    topics: ["Dynamic Programming"],
    company: "Google",
  },
  {
    id: 26,
    title: "Maximum Subarray",
    difficulty: "Easy",
    topics: ["Array", "Kadane's Algorithm"],
    company: "Microsoft",
  },
  {
    id: 27,
    title: "Jump Game",
    difficulty: "Medium",
    topics: ["Dynamic Programming", "Greedy"],
    company: "Amazon",
  },
  {
    id: 28,
    title: "Best Time to Buy and Sell Stock",
    difficulty: "Easy",
    topics: ["Array"],
    company: "Facebook",
  },
  {
    id: 29,
    title: "House Robber",
    difficulty: "Medium",
    topics: ["Dynamic Programming"],
    company: "Adobe",
  },
  {
    id: 30,
    title: "Unique Paths",
    difficulty: "Medium",
    topics: ["Dynamic Programming"],
    company: "Google",
  },
  {
    id: 31,
    title: "Binary Tree Level Order Traversal",
    difficulty: "Medium",
    topics: ["Tree", "BFS"],
    company: "Netflix",
  },
  {
    id: 32,
    title: "Kth Smallest Element in a BST",
    difficulty: "Medium",
    topics: ["Tree", "Inorder Traversal"],
    company: "Apple",
  },
  {
    id: 33,
    title: "Lowest Common Ancestor of a Binary Tree",
    difficulty: "Medium",
    topics: ["Tree", "DFS"],
    company: "Google",
  },
  {
    id: 34,
    title: "Serialize and Deserialize Binary Tree",
    difficulty: "Hard",
    topics: ["Tree", "BFS"],
    company: "Microsoft",
  },
  {
    id: 35,
    title: "Valid Anagram",
    difficulty: "Easy",
    topics: ["String", "Sorting"],
    company: "Amazon",
  },
  {
    id: 36,
    title: "Group Anagrams",
    difficulty: "Medium",
    topics: ["HashMap", "Sorting"],
    company: "Facebook",
  },
  {
    id: 37,
    title: "Find All Anagrams in a String",
    difficulty: "Medium",
    topics: ["Sliding Window"],
    company: "Adobe",
  },
  {
    id: 38,
    title: "Palindrome Partitioning",
    difficulty: "Medium",
    topics: ["Backtracking"],
    company: "Google",
  },
  {
    id: 39,
    title: "Merge K Sorted Lists",
    difficulty: "Hard",
    topics: ["Heap", "Priority Queue"],
    company: "Netflix",
  },
  {
    id: 40,
    title: "Sort Colors",
    difficulty: "Medium",
    topics: ["Two Pointers"],
    company: "Apple",
  },
  {
    id: 41,
    title: "Subsets",
    difficulty: "Medium",
    topics: ["Backtracking"],
    company: "Google",
  },
  {
    id: 42,
    title: "Letter Combinations of a Phone Number",
    difficulty: "Medium",
    topics: ["Backtracking"],
    company: "Microsoft",
  },
  {
    id: 43,
    title: "Generate Parentheses",
    difficulty: "Medium",
    topics: ["Backtracking"],
    company: "Amazon",
  },
  {
    id: 44,
    title: "Regular Expression Matching",
    difficulty: "Hard",
    topics: ["Dynamic Programming"],
    company: "Facebook",
  },
  {
    id: 45,
    title: "Wildcard Matching",
    difficulty: "Hard",
    topics: ["Dynamic Programming"],
    company: "Adobe",
  },
  {
    id: 46,
    title: "Find Median from Data Stream",
    difficulty: "Hard",
    topics: ["Heap", "Priority Queue"],
    company: "Google",
  },
  {
    id: 47,
    title: "Sliding Window Maximum",
    difficulty: "Hard",
    topics: ["Deque", "Sliding Window"],
    company: "Netflix",
  },
  {
    id: 48,
    title: "Longest Consecutive Sequence",
    difficulty: "Medium",
    topics: ["HashSet"],
    company: "Apple",
  },
  {
    id: 49,
    title: "Longest Palindromic Substring",
    difficulty: "Medium",
    topics: ["Dynamic Programming"],
    company: "Google",
  },
  {
    id: 50,
    title: "Basic Calculator",
    difficulty: "Hard",
    topics: ["Stack"],
    company: "Microsoft",
  },
];

export default problems;
